#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Nov 14 13:31:06 2017

@author: annabelwhipp

Assessment 2: Planning for drunks
Completed as part of Programming for Social Science: Core Skills
GEOG5995M
 
"""



# Start of imports

import matplotlib
import matplotlib.pyplot
import DrunkAgentFramework
import csv
import matplotlib.animation 



# Start of creating lists
  
environment=[]
mapenvironment=[]
agents=[]
num_of_agents= 25
num_of_iterations=10000 



# Reading in environment data. The environment is a single 300 by 300 raster 
# file which represents 25 houses and 1 pub. The pub is represented by 1s and 
# the houses are numbered 10-250 (increasing by an increment of 10 each time).
# Empty spaces are represents by 0s. 

f=open ("drunk.plan.txt")
reader=csv.reader (f, quoting = csv.QUOTE_NONNUMERIC)



# Defining variable figure 

fig= matplotlib.pyplot.figure(figsize=(7,7))



# Defining variable axes

ax= fig.add_axes([0,0,1,1])



# Environment file csv into rows

for row in reader:
    rowlist = []
    for item in row:
        rowlist.append(item)
    #print(len(rowlist))
    environment.append(rowlist)

#print(type(environment), len(environment))

#print (environment)



# The next section of code is for setting up mapenvironment. The mapenvironment 
# is creating an environment to map the density plot. Each time an agent passes 
# through a point the value of 1 is added to the environment. This allows a 
# density map to be produced. A new environment is created to plot the density 
# as the 'houses' and 'pub' have already been assigned values, for example 10, 
# 20, 30. This would interupt the procedure of adding 1 to an empty environment 

# Creating the size of the environment
height=len(environment)
width=len(environment[0])
# Adding zeros to the mapenvironment
for i in range(height):
    rowlist = []
    for j in range(width):
        rowlist.append(0)
    mapenvironment.append(rowlist)
    
# checking the mapenvironment has been made
# print(height,width)



# Looking through the environment to find the location of the pub
    
for y, row in enumerate (environment):
    for x, value in enumerate (row):
        if value==1:
            xpub=x
            ypub=y



# Make i agents, append coordinates to list and then plot initial positions 

for i in range(num_of_agents):
    number = (i+1)*10
    agents.append(DrunkAgentFramework.Agent(environment, agents, number, xpub, 
                                            ypub))



# Take the ith agent and perform the following 
for i in range (num_of_agents):
    # When the agent hasn't reached home, move and add 1 to the mapenvironment
    # with each iteration
    while agents[i].is_home==False:
        agents[i].move()
        mapenvironment[agents[i].y][agents[i].x]+=1
        # Stop moving if the agent gets to their home
        if agents[i].house_number==agents[i].environment[agents[i].y][agents[i].x]:
            agents[i].is_home=True



# Print the mapenvironment. This produces a density map.      
matplotlib.pyplot.imshow(mapenvironment)
matplotlib.pyplot.show()
 

        
#for i in range (num_of_agents):
#    matplotlib.pyplot.scatter(agents[i].x,agents[i].y)
#    matplotlib.pyplot.imshow(environment)   



# This tells the user which agents have reached their home. A true or false is
# provided for each agent. Each agent has a number. If it says true the agent
# has returned to their home. If false the agent has not reached their home.
    
for i in range(len(agents)):
    print('agent {0}: {1}'.format(i, agents[i].is_home))



# Start of displaying the agents statically on the environment

matplotlib.pyplot.xlim(0,300)
matplotlib.pyplot.ylim(0,300)
matplotlib.pyplot.imshow(environment)
for i in range (num_of_agents):
    # If the agent arrives at theri home plot them as white, 
    # if not they are plotted with their original colour
    if agents[i].is_home == True:
        matplotlib.pyplot.scatter(agents[i].x,agents[i].y, c='white')
    else:
        matplotlib.pyplot.scatter(agents[i].x,agents[i].y)
matplotlib.pyplot.show()



# Writing the new mapenvironment(density map)to a csv file 

f2= open ('mapenvironmentout.csv', 'w', newline= '')
writer = csv.writer (f2, delimiter = ' ')
for row in mapenvironment:
    writer.writerow(row)
f2.close
    

